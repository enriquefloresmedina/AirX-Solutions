# Code generated by font_to_py.py.
# Font: Arial.ttf Char set: %0123456789ABCDEFGJKLMNOPRSTUVYakº
# Cmd: font_to_py.py Arial.ttf 15 arial15.py -x -c ºC%kPaKMJANFEBRYULGSOTVD0123456789
version = '0.33'
def height():
    return 15

def baseline():
    return 15

def max_width():
    return 18

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 37

def max_ch():
    return 186

_font =\
b'\x0b\x00\x1f\x00\x3f\x80\x71\xc0\x60\xc0\x00\xc0\x01\x80\x03\x80'\
b'\x07\x00\x0e\x00\x0c\x00\x0c\x00\x00\x00\x00\x00\x0c\x00\x0c\x00'\
b'\x12\x00\x1c\x0c\x00\x36\x18\x00\x63\x18\x00\x63\x30\x00\x63\x30'\
b'\x00\x63\x60\x00\x36\x60\x00\x1c\xce\x00\x00\xdb\x00\x01\xb1\x80'\
b'\x01\xb1\x80\x03\x31\x80\x03\x31\x80\x06\x1b\x00\x06\x0e\x00\x00'\
b'\x0b\x00\x1f\x00\x3f\x80\x31\x80\x60\xc0\x60\xc0\x60\xc0\x60\xc0'\
b'\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x31\x80\x3f\x80\x1f\x00'\
b'\x0b\x00\x06\x00\x06\x00\x0e\x00\x3e\x00\x36\x00\x06\x00\x06\x00'\
b'\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00'\
b'\x0b\x00\x1f\x00\x3f\x80\x30\xc0\x60\xc0\x00\xc0\x00\xc0\x01\x80'\
b'\x01\x80\x03\x00\x06\x00\x0c\x00\x18\x00\x30\x00\x7f\xc0\x7f\xc0'\
b'\x0b\x00\x1e\x00\x3f\x00\x73\x80\x61\x80\x01\x80\x03\x80\x06\x00'\
b'\x07\x80\x01\xc0\x00\xc0\x00\xc0\x60\xc0\x71\xc0\x3f\x80\x1f\x00'\
b'\x0b\x00\x01\x00\x03\x00\x07\x00\x07\x00\x0f\x00\x1b\x00\x33\x00'\
b'\x33\x00\x63\x00\xc3\x00\xff\xc0\xff\xc0\x03\x00\x03\x00\x03\x00'\
b'\x0b\x00\x3f\x80\x3f\x80\x30\x00\x30\x00\x60\x00\x6f\x00\x7f\x80'\
b'\x61\xc0\x00\xc0\x00\xc0\x00\xc0\x60\xc0\x71\x80\x3f\x80\x1e\x00'\
b'\x0b\x00\x0f\x00\x1f\x80\x31\xc0\x30\xc0\x60\x00\x6f\x00\x7f\x80'\
b'\x71\xc0\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x31\x80\x3f\x80\x0f\x00'\
b'\x0b\x00\x7f\xc0\x7f\xc0\x00\x80\x01\x80\x03\x00\x03\x00\x06\x00'\
b'\x06\x00\x0c\x00\x0c\x00\x0c\x00\x18\x00\x18\x00\x18\x00\x18\x00'\
b'\x0b\x00\x1f\x00\x3f\x80\x71\xc0\x60\xc0\x60\xc0\x71\xc0\x3f\x80'\
b'\x3f\x80\x71\xc0\x60\xc0\x60\xc0\x60\xc0\x71\xc0\x3f\x80\x1f\x00'\
b'\x0b\x00\x1e\x00\x3f\x80\x31\x80\x60\xc0\x60\xc0\x60\xc0\x60\xc0'\
b'\x71\xc0\x3f\xc0\x1e\xc0\x00\xc0\x60\xc0\x71\x80\x3f\x80\x1e\x00'\
b'\x0b\x00\x1f\x00\x3f\x80\x71\xc0\x60\xc0\x00\xc0\x01\x80\x03\x80'\
b'\x07\x00\x0e\x00\x0c\x00\x0c\x00\x00\x00\x00\x00\x0c\x00\x0c\x00'\
b'\x0d\x00\x07\x00\x07\x00\x0d\x80\x0d\x80\x0d\x80\x18\xc0\x18\xc0'\
b'\x18\xc0\x30\x60\x3f\xe0\x7f\xf0\x60\x30\x60\x30\xc0\x18\xc0\x18'\
b'\x0d\x00\x3f\x80\x3f\xc0\x30\xe0\x30\x60\x30\x60\x30\xe0\x3f\xc0'\
b'\x3f\xc0\x30\x60\x30\x30\x30\x30\x30\x30\x30\x70\x3f\xe0\x3f\xc0'\
b'\x0e\x00\x07\x80\x1f\xe0\x38\x70\x30\x38\x70\x18\x60\x00\x60\x00'\
b'\x60\x00\x60\x00\x60\x00\x70\x18\x30\x38\x38\x70\x1f\xe0\x07\x80'\
b'\x0e\x00\x3f\xc0\x3f\xe0\x30\x70\x30\x30\x30\x18\x30\x18\x30\x18'\
b'\x30\x18\x30\x18\x30\x18\x30\x18\x30\x30\x30\x70\x3f\xe0\x3f\xc0'\
b'\x0d\x00\x3f\xf0\x3f\xf0\x30\x00\x30\x00\x30\x00\x30\x00\x3f\xe0'\
b'\x3f\xe0\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x3f\xf0\x3f\xf0'\
b'\x0c\x00\x3f\xe0\x3f\xe0\x30\x00\x30\x00\x30\x00\x30\x00\x3f\xc0'\
b'\x3f\xc0\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00'\
b'\x10\x00\x07\xe0\x0f\xf8\x1c\x1c\x30\x0c\x30\x04\x60\x00\x60\x00'\
b'\x60\xfe\x60\xfe\x60\x06\x30\x06\x30\x06\x1c\x1e\x0f\xfc\x03\xf0'\
b'\x0a\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00'\
b'\x03\x00\x03\x00\x03\x00\x63\x00\x63\x00\x73\x00\x3e\x00\x1c\x00'\
b'\x0d\x00\x30\x70\x30\xe0\x31\xc0\x33\x80\x33\x00\x37\x00\x3e\x00'\
b'\x3f\x00\x3b\x00\x33\x80\x31\xc0\x30\xe0\x30\x60\x30\x70\x30\x38'\
b'\x0b\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00'\
b'\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x3f\xc0\x3f\xc0'\
b'\x11\x00\x38\x0e\x00\x3c\x1e\x00\x3c\x1e\x00\x3c\x1e\x00\x36\x36'\
b'\x00\x36\x36\x00\x36\x36\x00\x36\x36\x00\x33\x66\x00\x33\x66\x00'\
b'\x33\x66\x00\x33\x66\x00\x31\xc6\x00\x31\xc6\x00\x31\xc6\x00\x00'\
b'\x0d\x00\x60\x30\x70\x30\x78\x30\x78\x30\x6c\x30\x6c\x30\x66\x30'\
b'\x67\x30\x63\x30\x61\xb0\x61\xb0\x60\xf0\x60\xf0\x60\x70\x60\x30'\
b'\x10\x00\x07\xe0\x0f\xf0\x1c\x38\x30\x0c\x70\x0e\x60\x06\x60\x06'\
b'\x60\x06\x60\x06\x60\x06\x70\x0e\x30\x0c\x1c\x38\x0f\xf0\x07\xe0'\
b'\x0d\x00\x3f\xc0\x3f\xe0\x30\x70\x30\x30\x30\x30\x30\x30\x30\x70'\
b'\x3f\xe0\x3f\xc0\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00'\
b'\x0e\x00\x3f\xc0\x3f\xe0\x30\x70\x30\x30\x30\x30\x30\x70\x3f\xe0'\
b'\x3f\xc0\x31\x80\x30\xc0\x30\xe0\x30\x60\x30\x70\x30\x30\x30\x38'\
b'\x0d\x00\x0f\xc0\x1f\xe0\x38\x70\x30\x30\x30\x00\x38\x00\x1f\x00'\
b'\x07\xc0\x00\xe0\x00\x30\x60\x30\x60\x30\x38\x70\x3f\xe0\x0f\x80'\
b'\x0c\x00\xff\xf0\xff\xf0\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00'\
b'\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00'\
b'\x0d\x00\x60\x30\x60\x30\x60\x30\x60\x30\x60\x30\x60\x30\x60\x30'\
b'\x60\x30\x60\x30\x60\x30\x60\x30\x60\x30\x30\x60\x3f\xe0\x0f\x80'\
b'\x0f\x00\x60\x0c\x60\x0c\x70\x1c\x30\x18\x30\x18\x18\x30\x18\x30'\
b'\x18\x30\x0c\x60\x0c\x60\x06\xc0\x06\xc0\x06\xc0\x03\x80\x03\x80'\
b'\x0e\x00\xe0\x1c\x60\x18\x30\x30\x38\x70\x1c\xe0\x0c\xc0\x07\x80'\
b'\x07\x80\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00'\
b'\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x7f\x80\x61\x80'\
b'\x01\x80\x07\x80\x3f\x80\x79\x80\x61\x80\x63\x80\x7f\x80\x3c\xc0'\
b'\x0a\x00\x60\x00\x60\x00\x60\x00\x60\x00\x61\xc0\x63\x80\x67\x00'\
b'\x6e\x00\x7c\x00\x7e\x00\x66\x00\x67\x00\x63\x80\x61\x80\x61\xc0'\
b'\x07\x00\x38\x44\xc6\xc6\xc6\xc4\x38\x00\x00\x00\x00\x00\x00\x00'\
b'\x00'

_sparse =\
b'\x25\x00\x04\x00\x30\x00\x0a\x00\x31\x00\x0e\x00\x32\x00\x12\x00'\
b'\x33\x00\x16\x00\x34\x00\x1a\x00\x35\x00\x1e\x00\x36\x00\x22\x00'\
b'\x37\x00\x26\x00\x38\x00\x2a\x00\x39\x00\x2e\x00\x3f\x00\x32\x00'\
b'\x41\x00\x36\x00\x42\x00\x3a\x00\x43\x00\x3e\x00\x44\x00\x42\x00'\
b'\x45\x00\x46\x00\x46\x00\x4a\x00\x47\x00\x4e\x00\x4a\x00\x52\x00'\
b'\x4b\x00\x56\x00\x4c\x00\x5a\x00\x4d\x00\x5e\x00\x4e\x00\x64\x00'\
b'\x4f\x00\x68\x00\x50\x00\x6c\x00\x52\x00\x70\x00\x53\x00\x74\x00'\
b'\x54\x00\x78\x00\x55\x00\x7c\x00\x56\x00\x80\x00\x59\x00\x84\x00'\
b'\x61\x00\x88\x00\x6b\x00\x8c\x00\xba\x00\x90\x00'

_mvfont = memoryview(_font)
_mvsp = memoryview(_sparse)
ifb = lambda l : l[0] | (l[1] << 8)
def bs(lst, val):
    while True:
        m = (len(lst) & ~ 7) >> 1
        v = ifb(lst[m:])
        if v == val:
            return ifb(lst[m + 2:])
        if not m:
            return 0
        lst = lst[m:] if v < val else lst[:m]
def get_ch(ch):
    doff = bs(_mvsp, ord(ch)) << 3
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 15
    return _mvfont[doff + 2:next_offs], 15, width
 
